// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test1.Models;

#nullable disable

namespace Test1.Migrations
{
    [DbContext(typeof(CasasdbContext))]
    partial class CasasdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Test1.Models.Carros_duenio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DuenioId")
                        .HasColumnType("int");

                    b.Property<string>("nombre_carro")
                        .HasColumnType("longtext");

                    b.Property<int?>("precio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DuenioId");

                    b.ToTable("Carros_Duenios");
                });

            modelBuilder.Entity("Test1.Models.Casas_duenio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DuenioId")
                        .HasColumnType("int");

                    b.Property<string>("nombre_casa")
                        .HasColumnType("longtext");

                    b.Property<int?>("precio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DuenioId");

                    b.ToTable("Casas_Duenios");
                });

            modelBuilder.Entity("Test1.Models.Duenio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnType("longtext");

                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Duenios");
                });

            modelBuilder.Entity("Test1.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Test1.Models.Venta_Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("Photo")
                        .HasColumnType("longtext");

                    b.Property<int?>("Precio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Venta_Carros");
                });

            modelBuilder.Entity("Test1.Models.Venta_Casas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("moredescripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("photo")
                        .HasColumnType("longtext");

                    b.Property<int?>("precio")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("venta_casas_tb", (string)null);
                });

            modelBuilder.Entity("Test1.Models.Venta_Moto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("Photo")
                        .HasColumnType("longtext");

                    b.Property<int?>("Precio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Venta_Motos");
                });

            modelBuilder.Entity("Test1.Models.Carros_duenio", b =>
                {
                    b.HasOne("Test1.Models.Duenio", "Duenio")
                        .WithMany("Carros_Duenios")
                        .HasForeignKey("DuenioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Duenio");
                });

            modelBuilder.Entity("Test1.Models.Casas_duenio", b =>
                {
                    b.HasOne("Test1.Models.Duenio", "Duenio")
                        .WithMany("Casas_Duenios")
                        .HasForeignKey("DuenioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Duenio");
                });

            modelBuilder.Entity("Test1.Models.Duenio", b =>
                {
                    b.Navigation("Carros_Duenios");

                    b.Navigation("Casas_Duenios");
                });
#pragma warning restore 612, 618
        }
    }
}
